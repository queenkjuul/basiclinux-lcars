
                           ANNOUNCING NCURSES 1.9.9G
                                       
   The ncurses (new curses) library is a freeware emulation of System V
   Release 4.0 curses. It uses terminfo format, supports pads and color
   and multiple highlights and forms characters and function-key mapping,
   and has all the other SYSV-curses enhancements over BSD curses.
   
   In mid-June 1995, the maintainer of 4.4BSD curses declared that he
   considered 4.4BSD curses obsolete, and is encouraging the keepers of
   Unix releases such as BSD/OS, freeBSD and netBSD to switch over to
   ncurses.
   
   The ncurses code was developed under Linux. It should port easily to
   any ANSI/POSIX-conforming UNIX. It has even been ported to OS/2 Warp!
   
   The distribution includes the library and support utilities, including
   a terminfo compiler tic(1), a decompiler infocmp(1), clear(1),
   tput(1), tset(1), and a termcap conversion tool captoinfo(1). Full
   manual pages are provided for the library and tools.
   
   The ncurses distribution is available via anonymous FTP at:
   	ftp://ftp.netcom.com/pub/zm/zmbenhal/ncurses.
   It is also carried on the GNU distribution site at
   	ftp://prep.ai.mit.edu/pub/gnu.
   Ongoing beta versions are available at
   	ftp://ftp.clark.net:/pub/dickey/ncurses.
   
                              FEATURES OF NCURSES
                                       
   The ncurses package is fully compatible with SVr4 curses:
   
     * All 257 of the SVr4 calls have been implemented (and are
       documented).
       
     * Full support for SVr4 curses features including keyboard mapping,
       color, forms-drawing with ACS characters, and automatic
       recognition of keypad and function keys.
       
     * An emulation of the System V Release 4 panels library, supporting
       a stack of windows with backing store, is included.
       
     * An emulation of the System V Release 4 menus library, supporting a
       uniform but flexible interface for menu programming, is included.
       
     * An emulation of the System V Release 4 form library, supporting
       data collection through on-screen forms, is included.
       
     * Binary terminfo entries generated by the ncurses tic(1)
       implementation are bit-for-bit-compatible with the entry format
       SVr4 curses uses.
       
     * The utilities have options to allow you to filter terminfo entries
       for use with less capable _curses_/_terminfo_ versions such as the
       HP/UX and AIX ports.
       
   The ncurses package also has many useful extensions over SVr4:
   
     * The API is 8-bit clean and base-level conformant with the X/OPEN
       curses specification, XSI Curses (that is, it implements all BASE
       level features, but not all EXTENDED features). Most
       EXTENDED-level features not directly concerned with wide-character
       support are implemented, including many function calls not
       supported under SVr4 curses (but portability of all calls is
       documented so you can use the SVr4 subset only).
       
     * Unlike SVr4 curses, ncurses can write to the rightmost-bottommost
       corner of the screen if your terminal has an insert-character
       capability.
       
     * (PC-clone boxes only) Support for access to the IBM PC ROM
       characters 0-32 through the highlight A_ALTCHARSET.
       
     * Support for mouse event reporting under xterm.
       
     * The function wresize() allows you to resize windows, preserving
       their data.
     * Better cursor-movement optimization. The package now features a
       cursor-local-movement computation more efficient than either BSD's
       or System V's.
       
     * Super hardware scrolling support. The screen-update code
       incorporates a novel, simple, and cheap algorithm that enables it
       to make optimal use of hardware scrolling, line-insertion, and
       line-deletion for screen-line movements. This algorithm is more
       powerful than the 4.4BSD curses quickch() routine.
       
     * It is possible to generate the library with a list of pre-loaded
       fallback entries linked to it so that it can serve those terminal
       types even when no terminfo tree or termcap file is accessible
       (this may be useful for support of screen-oriented programs that
       must run in single-user mode).
       
     * The tic(1)/captoinfo utility provided with ncurses has the ability
       to translate many termcaps from the XENIX, IBM and AT&T extension
       sets.
       
     * A BSD-like tset(1) utility is provided.
       
     * The ncurses library and utilities will automatically read terminfo
       entries from $HOME/.terminfo if it exists, and compile to that
       directory if it exists and the user has no write access to the
       system directory. This feature makes it easier for users to have
       personal terminfo entries without giving up access to the system
       terminfo directory.
       
     * You may specify a path of directories to search for compiled
       descriptions with the environment variable TERMINFO_DIRS (this
       generalizes the feature provided by TERMINFO under stock System
       V.)
       
     * In terminfo source files, use capabilities may refer not just to
       other entries in the same source file (as in System V) but also to
       compiled entries in either the system terminfo directory or the
       user's $HOME/.terminfo directory.
       
     * A script (_capconvert_) is provided to help BSD users transition
       from termcap to terminfo. It gathers the information in a TERMCAP
       environment variable and/or a ~/.termcap local entries file and
       converts it to an equivalent local terminfo tree under
       $HOME/.terminfo.
       
     * Automatic fallback to the /etc/termcap file can be compiled in
       when it is not possible to build a terminfo tree. This feature is
       neither fast nor cheap, you don't want to use it unless you have
       to, but it's there.
       
     * The table-of-entries utility _toe_ makes it easy for users to see
       exactly what terminal types are available on the system.
       
     * The library meets the XSI requirement that every macro entry point
       have a corresponding function which may be linked (and will be
       prototype-checked) if the macro definition is disabled with
       #undef.
       
     * An HTML "Introduction to Programming with NCURSES" document
       provides a narrative introduction to the curses programming
       interface.
       
                             STATE OF THE PACKAGE
                                       
   Numerous bugs present in earlier versions have been fixed; the library
   is far more reliable than it used to be. Bounds checking in many
   `dangerous' entry points has been improved. The code is now type-safe
   according to gcc -Wall. The library has been checked for malloc leaks
   and arena corruption by the Purify memory-allocation tester.
   
   The ncurses code has been tested with a wide variety of games and
   utilities, including:
   
   lynx-2.4
          the character-screen WWW browser
          
   bs-2.0
          Battleships game with proper visual interface
          
   greed-3.1
          the game of Greed
          
   nolan-1.1
          the World's Smallest Political Quiz
          
   vh-1.6
          Volks-Hypertext browser for the Jargon File
          
   blue   Blue Moon solitaire game
          
   u386mon
          System performance monitor for SVr4
          
   nvi    New vi alpha versions 1.50 are able to use ncurses versions
          1.9.7 and later.
          
   The ncurses distribution includes a selection of test programs.
   
Who's Who and What's What

   The primary maintainer of ncurses is Zeyd Ben-Halim.  Unfortunately, he can
   only work on the package part time.  As a result, since 1.8.1, much of the
   enhancement work and all the documentation has been done by Eric S. 
   Raymond, Thomas Dickey and Juergen Pfeifer).  However, requests for beta
   releases and other queries should properly be directed to Zeyd.
   
   There is an ncurses mailing list. It is a majordomo list; to join,
   write to listserv@netcom.com with a message containing the line:
   

             subscribe ncurses-list <name>@<host.domain>

   This list is open to anyone interested in helping with the development
   and testing of this package.
   
Future Plans

     * Extended mouse support via Alessandro Rubini's gpm package.
     * Extended-level XPG4 conformance, with internationalization
       support.
       
     * Ports to more systems, including DOS and Windows.
       
   We need people to help with these projects. If you are interested in
   working on them, please join the ncurses list.
   
The terminfo/termcap Database

   The distribution includes and uses a copy of the terminfo-format
   terminal description file maintained by Eric Raymond. This database
   (which is the official descendant of the 4.4BSD termcap file) changes
   faster than this code does, so you probably want to pick up a new copy
   occasionally.
   
   You can download either the termcap or terminfo versions of the
   terminal-type database from Eric's ncurses resource page,
   http://www.ccil.org/~esr/ncurses.html.
   
Other Related Resources

   You can find lots of information on terminal-related topics not
   covered in the terminfo file at Richard Shuford's archive.
     _________________________________________________________________
   
    Eric S. Raymond <esr@snark.thyrsus.com>
