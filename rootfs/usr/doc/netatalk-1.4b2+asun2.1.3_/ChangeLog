1999-02-26  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/volume.c (afp_openvol): erk. the volume password gets
	aligned along an even boundary.

1999-02-23  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/volume.c (readvolfile): added volume password support. 

1999-02-14  a sun  <asun@hecate.darksunrising.blah>

	* etc/atalkd/multicast.c (addmulti): added FreeBSD's data-link
	layer multicast setting bits.

	* libatalk/adouble/ad_open.c (ad_v1tov2): make sure to stick in
	prodos field info when converting.

	* rc.atalk.redhat: added pidof checking in case the machine
	crashes. also added rc.atalk.wrapper to the redhat rc script
	installation. 

1999-02-07  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/fork.c (afp_setforkparams): make sure to do better
	error detection here and more fully report error conditions.
	
	(flushfork): make sure to flush the header if necessary (rfork
	length changed or modification date needs to be set).

	(afp_write): ugh. this wasn't returning the right values for the
	last byte written if the endflag was set. in addition, it was
	setting the modification date. that should be left to FPCloseFork
	and FPFlush(Fork). this fixes a problem that shows up with
	QuarkXPress. 

	NOTE: as of now, changes to the rfork info are the only things
	that aren't flushed immediately when altered. 

	* etc/afpd/fork.c (get/setforkparams), ofork.c: what ugliness. we
	need to report bitmap errors if we try to fiddle with the wrong
	fork. i added an of_flags field to keep things sorted.

	* libatalk/adouble/ad_open.c (ad_v1tov2): oops. in all of the
	movement, i forgot to make sure that the pre-asun2.2.0 features
	still compile.

1999-02-06  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/filedir.c (afp_moveandrename): make sure to save the
	old name even when it's a directory.

	* globals.h: added oldtmp and newtmp to AFPObj to reduce the
	number of buffers used. use these when needed in afp_* calls.

	* etc/afpd/directory.c (deletecurdir): delete stray .AppleDouble
	files when deleting a directory.

1999-02-05  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/file.c (afp_createfile): fixed a hard create error
	check bug. 

	* fixed up a few bobbles in the netatalk-990130 merge.

	* the noadouble option should be pretty much implemented. here's
	how it goes:
		when a directory is created, the corresponding
		.AppleDouble directory is not.
		
		comments, dates, and other file attributes will get
		silently ignored and not result in the creation of a new
		.AppleDouble directory.

		however, if anything possessing a resource fork is copied
		into that directory, the corresponding .AppleDouble
		directory will be created. once this happens, any
		other file in the directory can acquire an AppleDouble
		header file in the future.
		
1999-02-03  a sun  <asun@hecate.darksunrising.blah>

	* merged in the rest of netatalk-990130.

	* sys/solaris: merged in netatalk-990130 changes.

	* etc/afpd/file.c,fork.c,desktop.c libatalk/adouble/ad_sendfile.c:
	tested and fixed the sendfile bits on linux. it looks like linux
	doesn't permit socket -> file sendfiles yet.

	* etc/afpd/fork.c (afp_read): we can't stream FPRead's with
	newline character checking on.

1999-02-02  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/fork.c (afp_flush), ofork.c (of_flush): FPFlush
	operates on a per-volume basis.

1999-01-31  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/file.c (copyfile): sendfile bits added here also.

	* etc/afpd/desktop.c (afp_geticon): added sendfile bits here as
	well. 

	* libatalk/adouble/ad_sendfile.c (ad_writefile/ad_readfile):
	implemented sendfile bits. currently, there's support for linux
	and freebsd. unfortunately, freebsd's implementation doesn't allow
	file->file or socket->file copies. bleah.

1999-01-30  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/file.c (setfilparams), directory (setdirparams),
	volume.c (volset): added in the beginnings of a NOADOUBLE option
	for those that don't want AppleDouble headers to be created by
	default. it doesn't really work that well right now.

1999-01-29  a sun  <asun@hecate.darksunrising.blah>

	* libatalk/adouble/ad_open.c (ad_v1tov2): separated v1tov2 bits
	from ad_refresh. made broken v1 header checking the default. fixed
	broken v1 date checking. now, it just checks to see if the v1
	MDATE is > than st_mtime by 5 years.

	* etc/afpd/directory.c: make date setting alter directory dates as
	well. 

1999-01-24  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/afp_dsi.c (alarm_handler,afp_over_dsi): added a
	CHILD_RUNNING flag to prevent afpd from timing out on long copies.

1999-01-21  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/volume.c (afp_openvol), libatalk/cnid/cnid_nextid.c:
	shift the beginning of the fake did's if necessary.

	* libatalk/adouble/ad_open.c (ad_refresh): fixed screwed-up date
	detection code.

	* libatalk/cnid/cnid_add.c,cnid_open.c,cnid_close.c: made some
	changes so that the CNIDs will still work even when the .AppleDB
	directory is read-only. if you're still allowed to create files on
	these volumes, you'll get a temporary id for those.

1999-01-20  a sun  <asun@hecate.darksunrising.blah>

	* libatalk/cnid/{cnid_close.c,cnid_open.c}: added bits so that log
	files get cleared out on cnid_close() if it's the last user for a
	volume.

1999-01-18  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/volume.c (afp_setvolparams): added FPSetVolParms. this
	allows us to set the backup date on the server.

	* etc/afpd/file.c (afp_exchangefiles): whee! we now have
	FPExchangeFiles. we also have FPDeleteID, so that only leaves us
	with FPCatSearch to do.

1999-01-16  a sun  <asun@hecate.darksunrising.blah>

	* sys/solaris/ddp.c (ddp_rput): added a couple htons()'s for the
	net addresses.

1999-01-11  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/volume.c (volset, afp_openvol): you can now specify a
	dbpath= in AppleVolumes.* for the CNID database.

	* libatalk/adouble/ad_open.c (ad_refresh): if we build in an
	appledouble v1 environment, turn on v1compat by default.

1999-01-10  a sun  <asun@hecate.darksunrising.blah>

	* libatalk/adouble/ad_open.c (ad_refresh): added v1compat option
	to handle broken ad headers.

	* etc/afpd/file.c (setfilparams): we need to make sure that we
	flush the file if we've created it even if there's an error.  the
	magic number/version don't get saved if we don't.

	* etc/afpd/appl.c, etc/afpd/directory.c, etc/afpd/desktop.c: added
	DIRBITS to mkdirs.

1998-12-30  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/volume.c (afp_openvol): got rid of unnecessary v_did.

	* etc/afpd/file.c (afp_resolveid, afp_createid): added these two
	in. 

	* well, what do you know? the cnid stuff compiles in. 

1998-12-29  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/fork.c, directory.c, file.c, filedir.c, volume.c,
	enumerate.c: added in stubs for CNID database conditional on
	AD_VERSION > AD_VERSION1.

	* etc/afpd/nls/makecode.c: added iso8859-1 mapping.

1998-12-27  a sun  <asun@hecate.darksunrising.blah>

	* bin/adv1tov2/adv1tov2.c: turn non-printable ascii characters
	into hex code as well.

1998-12-21  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/auth.c: fixed FPChangePW for 2-way randnums.

1998-12-15  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/fork.c (read_file/write_file): do crlf translation in
	both directions so that we can recover from problems if
	necessary. 

1998-12-14  a sun  <asun@hecate.darksunrising.blah>

	* bin/adv1tov2/adv1tov2.c: small utility program that recursively
	descends a directory and converts everything it sees into
	AppleDouble v2.

1998-12-13  a sun  <asun@hecate.darksunrising.blah>

	* libatalk/adouble/ad_flush.c (ad_rebuild_header): moved the
	header rebuilding here so that ad_refresh can use it.

	* libatalk/adouble/ad_open.c (ad_refresh): added locking to v1->v2
	conversion.

	* bin/megatron/asingle.c: yuk. removed all of
	the duplicate stuff here and had it use the #defines in adouble.h.  

	* libatalk/adouble/ad_open.c (ad_refresh): finished v1 -> v2
	conversion routine. we still need a shortname creator and a cnid
	database for the v2 features to be useful. 

1998-12-11  a sun  <asun@hecate.darksunrising.blah>

	* libatalk/adouble/ad_open.c (ad_refresh): punt if we get a file
	that we don't understand.

1998-12-10  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/desktop.c (utompath,mtoupath): simplified the codepage
	stuff. also made sure to lower/upper the 8-bit characters as
	well. 

	* libatalk/util/strdicasecmp.c: the casemapping had a few wrong
	characters. 

	* etc/afpd/fork.c (getforkparams): make sure that the ROpen/DOpen
	attribute bits are in the correct byte ordering.

1998-12-09  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/volume.c (volset): made prodos an option to options=
	flag. also added crlf as an option.

	* libatalk/adouble/ad_open.c (ad_refresh): fix up times if
	necessary. 
	(ad_open): deal correctly with 0-length files by treating them as
	newly created. 

	* etc/afpd/volume.c (getvolparams), file.c (get/setfilparams),
	fork.c (getforkparams), directory.c (get/setdirparams): finished
	adding appledouble version 1 and 2 date conversion. also added
	attribute setting. 
	
	* etc/afpd/volume.c (getvolparams): make sure to flush the header
	file if we needed to fiddle with it. 

	* libatalk/adouble/ad_date.c, ad_attr.c: date/attribute
	setting/retrieval code. 

	* libatalk/adouble/ad_open.c (ad_open): initialize date
	structures here instead of elsewhere. 

1998-12-07  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/directory.c, fork.c, volume.c, file.c: added unix<->afp
	time conversion code. 

1998-12-05  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/volume.c (volset): changed prodos setting to
	prodos=true. 

1998-12-04  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/volume.c (volset): okay. you now have the following
	options to casefold: lowercase,uppercase,xlatelower,xlateupper
		tolower    -> lowercases everything in both directions
		toupper    -> uppercases everything in both directions
		xlatelower -> client sees lowercase, server sees uppercase
		xlateupper -> client sees uppercase, server sees lowercase

	NOTE: you only should use this if you really need to do so. this
	and the codepage option can cause mass confusion if applied
	blindly to pre-existing directories.
	
1998-12-03  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/desktop.c (utompath,mtoupath), etc/afpd/volume.h: added
	multiple options to casefold. bits 0 and 1 deal with MTOU, and
	bits 2 and 3 deal with UTOM. i did it that way so that you can
	casefold in one direction only or in both directions if
	desired. needless to say, setting both bits for UTOM or MTOU
	doesn't make any sense. right now, toupper takes precedence in
	MTOU, and tolower takes precedence in UTOM.

1998-12-02  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/afp_options.c (afp_options_*): added -uampath and
	-codepagepath to the list of available options. they specify the
	directories to look for uam modules and codepages,
	respectively. currently, -uampath doesn't do anything.

	* etc/afpd/volume.c (readvolfile): spruced up options to
	AppleVolumes files. now you can have mtoufile=<codepage.x>,
	utomfile=<codepage.y>, casefold=<num> for volumes.

	* etc/afpd/desktop.c (utompath,mtoupath): added
	codepage/casefolding support. casefold is currently an int that
	could have multiple actions. right now, i just lowercase in
	mtoupath and uppercase in utompath.

	* etc/afpd/ofork.c (of_alloc, of_findname, of_rename): added vol
	as an additional specifier so that we don't have problems with
	the same path names on multiple volumes. 

1998-11-29  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/volume.c (getvolparams): added AFP2.1 volume attribute
	bits. 

1998-11-24  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/atalkd/config.c (readconf, getifconf): added IFF_SLAVE to
	prevent atalkd from trying to use a slave channel.

1998-11-23  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/volume.c (getvolparams): we shouldn't set the custom
	icon bit by default on the root directory. that screws up pre-OS 8
	systems.

1998-11-19  a sun  <asun@purgatorius.zoology.washington.edu>

	* libatalk/dsi/dsi_getsess.c (dsi_getsession): ignore SIGPIPE's
	so that we can gracefully shut down the server side.

	* etc/afpd/afp_dsi.c (afp_over_dsi), etc/afpd/afp_options.c,
	libatalk/dsi/dsi_getsess.c (dsi_getsession),
	libatalk/asp/asp_getsess.c (asp_getsession): made the tickle timer
	interval an option (-tickleval <sec>).
	
	* etc/afpd/afp_dsi.c (afp_dsi_timedown): added child.die so that
	we don't stomp on a shutdown timer. libatalk/dsi/dsi_read.c,
	dsi_write.c both save/restore the old timer, so they don't really
	care what the actual value is. 
	
1998-11-18  a sun  <asun@purgatorius.zoology.washington.edu>

	* due to the recent obsession with bug fixing and low-level dsi
	cleanups, i've decided that this should really be asun2.1.1
	instead of asun2.1.0a.

1998-11-17  a sun  <asun@purgatorius.zoology.washington.edu>

	* libatalk/dsi/dsi_tcp.c (dsi_tcp_open): moved the afpd connection
	announcement here from etc/afpd/afp_dsi.c. 
	
	* libatalk/dsi/dsi_stream.c: moved all of the read/write functions
	into here as they're pretty generic. now, the protocol specific
	stuff only handles open and close. 

	* etc/afpd/fork.c (afp_read/write), desktop.c (afp_geticon),
	file.c (copyfile), include/atalk/dsi.h (dsi_writefile/readfile):
	added initial stubs for sendfile support. i still need to go
	through and calculate the appropriate offsets to use. 

	* libatalk/dsi/dsi_read.c, dsi_write.c: disable the interval timer
	instead of just ignoring it.

	* etc/afpd/desktop.c (afp_geticon), etc/afpd/fork.c (afp_read),
	libatalk/dsi/dsi_read.c (dsi_readinit, dsi_readinit): modified the
	dsi_read interface to return errors so that i can kill things
	gracefully. 

1998-11-16  a sun  <asun@purgatorius.zoology.washington.edu>

	* libatalk/dsi/dsi_tcp.c (dsi_tcp_send/dsi_tcp_write): erk. read()
	and write() treat a return of 0 differently. 

1998-11-16  a sun  <asun@hecate.darksunrising.blah>

	* libatalk/dsi/dsi_read.c (dsi_readinit): make sure to stick in
	the error code.

1998-11-15  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/fork.c (afp_read): re-ordered some of the checks here
	to return earlier on 0-sized files.

1998-11-13  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/afp_dsi.c (afp_over_dsi): moved the dsi->noreply toggle
	check to here from dsi_cmdreply.

1998-11-11  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/atalkd/zip.c (zip_packet): make sure to copy multicast zone
	back out. (reported by Michael Zuelsdorff <micha@dolbyco.han.de>)

1998-11-09  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/directory.c (getdirparams): changed unknown bit reply
	code to AFPERR_BITMAP instead of AFPERR_PARAM.

1998-11-06  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/enumerate.c (afp_enumerate), directory.c (renamedir):
	fixed a couple of failed realloc leaks.

	* etc/afpd/filedir.c (afp_moveandrename, afp_rename): added bits
	to deal with case-insensitive, case-preserving filesystems.

1998-10-30  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/auth.c: fixed randnum password changing check. 

1998-10-27  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/atalkd/main.c: add a check for SIOCATALKDIFADDR if
	SIOCDIFADDR fails.
	
	* etc/afpd/volume.c (getvolparams): ad_open had the wrong
	parameters. 

	* etc/afpd/unix.c (setdeskowner): added a little extra space to
	prevent buffer overflows here.

1998-10-26  a sun  <asun@purgatorius.zoology.washington.edu>

	* sys/linux/Makefile: fixed PAM message.

	* sys/solaris/Makefile: make failure to ln -s a non-fatal error. 

	* etc/papd/session.c, bin/pap/pap.c: changed sequence count to
	wrap from 0 -> 1 instead of from 0xFFFF -> 1.

	* etc/afpd/filedir.c (afp_rename, afp_moveandrename): actually, we
	should check against the entire unix name.
	
1998-10-21  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/filedir.c (afp_rename, afp_moveandrename): make sure
	to check against mac name.

1998-10-19  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/auth.c (afp_changepw): make password changing deal
	correctly with "real" user names. also, moved seteuid() to before
	the pam_authenticate() bit as shadow passwords need that.

	* etc/afpd/enumerate.c (afp_enumerate): make sure to check the mac
	name against MACFILELEN.

1998-10-16  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/file.c (renamefile), filedir.c (afp_rename),
	directory.c (renamedir): use strndiacasecmp() for AFPERR_SAMEOBJ
	checks. also make sure test occurs before checking to see if the
	destination exists.

1998-10-15  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/auth.c (afp_changepw): fixed a bit of brain damage. i
	forgot that password changing needs root privileges to work.

	* etc/afpd/auth.c (PAM_conversation): the supplied code was
	incorrect. i cleaned it up a bit.

	* sys/linux/Makefile: fixed the installation bits.

1998-10-14  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/auth.c (afp_changepw): don't kill the connection here
	if there's a problem.

1998-10-10  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/enumerate.c, fork.c, ofork.c, file.c,
	globals.h, directory.c, auth.c: #defined MACFILELEN and used
	that. also made sure that files > MACFILELEN never show up.

1998-09-25  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/{afpd,papd,atalkd}/bprint.c (bprint): got rid of the
	spurious pointer dereference.

	* etc/afpd/ofork.c (of_alloc/of_rename): allocate the max mac file
	length so that we don't need to realloc.

	* etc/afpd/filedir.c (afp_rename, afp_moveandrename): make sure to
	return AFPERR_BUSY if the dest has an ofork open.

	* etc/afpd/file.c (renamefile), directory.c (renamedir), filedir.c
	(afp_rename): return AFPERR_SAMEOBJ if source == dest

1998-09-21  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd: went through and looked for places that needed to use
	curdir instead of dir. i think i have them all right now.

	* etc/afpd/filedir.c (afp_moveandrename): wasn't keeping track of
	curdir correctly. what this really means is that cname should be
	fixed to return everything it changes as opposed to changing a
	global variable. 

1998-09-19  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/config.c (configinit): do the right thing if
	AFPConfigInit fails.

1998-09-18  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/config.c (ASP/DSIConfigInit, configfree): how 
	embarrassing. i wasn't doing refcounts correctly.

1998-09-17  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/nfsquota.c (getnfsquota): ultrix uses dqb_bwarn instead
	of dqb_btimelimit.

	* sys/ultrix/Makefile: ultrix understands the old rquota format. 

	* etc/afpd/ofork.c (of_findname): erk. forgot to only search in
	the current directory. 
	(of_rename): erk. changed it to handle renaming a file that has
	been opened multiple times.

	* etc/atalkd: made sure that if you don't specify -router, things
	are as they were before. 

1998-09-13  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/status.c (status_flags): forgot to turn on password
	setting if randnum passwords are being used.

1998-09-11  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/unix.c (setdirmode): erk. make sure only to setgid on
	directories. 

	* bin/aecho/aecho.c (main): incorporated -c <num> (ala ping) patch
	from "Fred Lindberg" <lindberg@id.wustl.edu>.

1998-09-03  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/directory.c (afp_closedir, afp_opendir): added these in
	for more AFP 2.0 compliance. unfortunately, apple's appleshare
	client doesn't like non-fixed directory ids.

1998-08-31  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/volume.c (accessvol): the accessible volume list can
	now be controlled by groups and usernames. just use something of
	the following form: @group,name,name2,@group2,name3

	NOTE: you can't have any spaces, and the parser forces you to
	include all options. in this case, there are some apple II options
	that need to be entered. they need to go away soon anyway.

	* etc/afpd/auth.c (getname): oops. i forgot to copy the gecos
	field into a temporary buffer before calling strtok.

1998-08-29  a sun  <asun@hecate.darksunrising.blah>

	* etc/atalkd/main.c (as_timer), rtmp.c (rtmp_delzones): when the 
	last router on an interface goes down, we need to delete the
	interface's zone table.

1998-08-28  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/status.c (afp_getsrvrinfo): although it's never used,
	i've added this in to increase AFP compliance.

	* etc/afpd/auth.c (afp_getuserinfo): added FPGetUserInfo -- this
	should make afpd compatible with OS 8.5's Nav Services.

	* etc/atalkd/config.c,main.c: -router now specifies router mode
	with any number of interfaces.

1998-08-27  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/atalkd/main.c (as_timer): well, i figured out how to set up
	atalkd as a single-interface router. now, you can get zones with
	only single interfaces! i'm only waiting on wes for the approved
	configuration toggle.

1998-08-26  a sun  <asun@purgatorius.zoology.washington.edu>

	* libatalk/adouble/ad_lock.c, include/atalk/adouble.h: turned the
	ADLOCK_* into real #defines and added translations in the
	lock-type specific functions. this should make it easier to
	recompile things without screwing up.

1998-08-26  a sun  <asun@hecate.darksunrising.blah>

	* etc/atalkd/nbp.c (nbp_packet): forgot to handle another local
	zone case.

1998-08-25  a sun  <asun@hecate.darksunrising.blah>

	* etc/afpd/status.c (status_server): changed status_server to
	use only the obj part of obj:type@zone-style names.

	* etc/atalkd/nbp.c (nbp_packet): unregistering wasn't handling
	zones properly. it was matching on anything but the actual zone.

1998-08-18  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/auth.c (clrtxt_login): added pam_set_time(PAM_TTY) so
	that solaris' pam session setup doesn't crap out.

1998-08-17  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/atalkd/multicast.c (zone_bcast): fixed to do the right thing
	with zip multicast info.

1998-08-15  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/nfsquota.c: made the old-style rquota fields dependent
	upon -DUSE_OLD_RQUOTA and defined that for sunos. also included
	<sys/time.h> for ultrix breakage.

1998-08-13  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/filedir.c (afp_rename), etc/afpd/ofork.c (of_rename): i
	knew that speeding up of_findname would be useful. in any case, i
	discovered the source of yet another small AFP non-compliance that
	was confusing WordPerfect. on an afp_rename, we also need to
	rename the corresponding ofork. i've added an of_rename() to do
	this.

1998-08-13  a sun  <asun@hecate>

	* etc/afpd/ofork.c (of_dealloc,of_alloc): sped up dealloc by
	sticking refnum in ofork.

1998-08-12  a sun  <asun@hecate>

	* etc/afpd/fork.c (afp_openfork): added already open attribute
	bits.

	* etc/afpd/ofork.c: added a hashed of_findname.

1998-08-06  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/fork.c (afp_openfork): fixed a problem with opening
	forks from read-only non-appledouble media.

1998-07-23  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/afs.c (afs_getvolspace), etc/afpd/volume.c
	(getvolspace): modified them to treak afs like the other
	getvolspaces w.r.t. VolSpace.

1998-07-21  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/unix.c (mountp): erk. i forgot that symlinks are often
	used for filesystems. nfs quotas sometimes failed as a
	result. that's fixed now.

1998-07-20  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/auth.c (login): added a -DRUN_AS_USER #define so that
	it's simple to run the server process as a non-root user.

1998-07-17  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/nfsquota.c (callaurpc, getnfsquota), volume.h: it turns
	out that i was opening lots of sockets with callaurpc. now, the
	socket gets saved and reused.

	NOTE: quota-1.55-9 from redhat 5.x doesn't return the correct size
	for rquota's bsize. unless fixed, rquota will report incorrect
	values. 
	
1998-07-08  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/uam/README: added some preliminary ideas on a
	plug-in uam architecture. in addition, this should allow arbitrary
	afp function replacement. eventually, auth.c should get a
	bit cleaner.

1998-07-07  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/nfsquota.c: added headers and redefined a couple
	structure fields so that sunos4 compiles.

	* libatalk/compat/rquota_xdr.c: compile if we're using glibc <
	2. this should get redhat 4.2 machines. NOTE: they're still
	missing librpcsvc.a, so they'll need to remove that from the
	etc/afpd/Makefile. 

1998-07-06  a sun  <asun@purgatorius.zoology.washington.edu>

	* libatalk/compat/rquota_xdr.c: it turns out that solaris is
	missing a couple functions needed for rquota support. here they
	are. 

	* etc/afpd/unix.c (mountp): fixed the nfs detection for
	solaris. we still need bsd and ultrix.

1998-07-05  a sun  <asun@hecate>

	* include/atalk/adouble.h: marked out space for appledouble v2. 

1998-07-04  a sun  <asun@hecate>

	* etc/afpd: plugged up some ad_open leaks. made sure that we don't
	get negative numbers for length fields and such.
	
1998-07-04  a sun  <asun@hecate>

	* etc/afpd/nfsquota.c (getnfsquota): added nfs rquota
	support. Robert J. Marinchick <rjm8m@majink1.itc.virginia.edu>
	provided the initial bits from the bsd quota program. 

	* etc/afpd/unix.c (getquota): made getquota call getfsquota or
	getnfsquota depending upon the type of fs. 

	* etc/afpd/unix.c (mountp/special): munged mountp and
	special to return either the nfs mount point or the fs
	device. set the vol->v_nfs flag if it's nfs.

	* etc/afpd/volume.c (getvolspace): xbfree and xbtotal will now
	honor results returned from uquota_getvolspace.
	
1998-06-29  a sun  <asun@purgatorius.zoology.washington.edu>

	* etc/afpd/file.c (copyfile): mmapping the file copy only helps on
	multiple copies. as that's not the case here, i've reverted to
	just doing read + write.
	
1998-06-28  a sun  <asun@purgatorius.zoology.washington.edu>

	* sys/linux/Makefile: fixed the redhat-style atalk
	installation. also, it doesn't over-write an existing
	/etc/rc.d/init.d/atalk file.

	* etc/afpd, libatalk/adouble/ad_write.c: removed <sys/file.h> and
	</usr/ucbinclude/sys/file.h> so that we rely upon adouble.h.

1998-06-19  a sun  <asun@purgatorius.zoology.washington.edu>

	* changed sys/linux/Makefile to install a redhat-style sysv atalk
	script instead of the bsd one.

	* include/atalk/adouble.h: moved same-name list stub to struct
	ad_adf. 
	
Thu Jun 18 18:20:28 1998  a sun  <asun@purgatorius>

	* changed to asunx.y.z notation as i was getting tired of
 	increasing numbers. as this version is undergoing a fairly
 	substantial overhaul, i bumped it to 2.1.0. don't ask why asun1.0
 	never existed. i just started at 2.0.

	* ofork (etc/afpd/{ofork.c,ofork.h,fork.c}: put in skeleton code
 	for hashed-by-name oforks and oforks which group by name to help
 	with byte locks and of_findname.

	* adouble (include/atalk/adouble.h): started implementing
 	appledouble v2. mostly, i added bits to headers. v2 has wonderful
 	bits that should make prodos support much less clunky, allow
 	persistent dids, and allow msdos support.

	* finder info: added bits to directory.c and file.c describing the
 	actual contents of finder info (from IM: Toolbox
 	Essentials). also, set default directory view to an allowed value
 	thanks to a suggestion from the appledouble v2 specs. that should
 	help with read-only media.

	* etc/afpd/{directory.c,volume.c,afs.c,directory.h}: added
	DIRDID_ROOT and DIRDID_ROOT_PARENT so people know that these did's
	are reserved.
	
Wed Jun 17 11:54:49 1998  a sun  <asun@purgatorius>

	* well, i'm starting a changelog as i keep forgetting what i've
	done. 

	* locks: revamped them to be more in line with what should
	happen. currently, i've reverted back to flock-style locks as i'll
	need to stick in more code to get fcntl-style locks to work
	properly. specifically, i think modifying of_alloc/of_dealloc to
	keep track of locks, fds, and names should solve the problem with
	fcntl locks being process-specific and not fd specific.

