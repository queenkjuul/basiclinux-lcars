Welcome to the Linux module utilities.

This release represents an almost complete rewrite of the utilities.
The goals of this rewrite were to clean out accumulated kruft, make
it easier to support different architectures, as well as adding a few
new features.

These utilities are intended primarily for use with kernels 2.1.18
and above.  They do fall back on a compatibility mode when used with
2.0.x kernels so that multiple sets of binaries are not needed when
switching between the two series, however if you are not planning on
using the 2.1.x kernel line, there is no point to installing this
package. 

Note further that package *must* be compiled under a 2.1.x kernel as
we need to be able to find out the architecture specific system call 
number given to query_module.


INSTALLATION
============

The first step is to run the configure script by entering the command:

	./configure

The build process uses the configure script to figure out a few things
about your system before actually compiling anything. Configyre takes
several command line options which can modify the installation
paths. Try './configure --help' for more information. (Minor note:
--exec-prefix defaults to / not /usr if not specified.)

The second step is to actually compile and install the utilities. Do
'make install' in this directory to get the following tools:

insmod/
	insmod		install a loadable module
	rmmod		remove module(s)
	ksyms		show symbols
	lsmod		show modules
	modinfo		display information about module

genksyms/
	genksyms	version generator for module symbols,
			to be run automatically during kernel make
			if CONFIG_MODVERSIONS was selected in "make config"

depmod/
	modprobe	load (a stack of) modules, controlled by a "makefile"
			and a configuration file.
	depmod		generate dependencies for modprobe.


kerneld/
	kerneld		A "user level kernel extension" that allows
			the kernel to perform some tasks in user space.
			Suitable tasks are e.g. loading of modules.


r~
-----
richard henderson <rth@cygnus.com>
